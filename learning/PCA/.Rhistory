xyNorm
setwd("C:/git/mytools/learning/PCA/")
df <- read.csv ("cleaned.csv")
head(df)
View(df)
df <- read.csv ("cleaned.csv")
head(df)
prcomp(df[,2:6],center = TRUE,scale = TRUE)
df2$completion_male <- ((df$completion_male - mean(df$completion_male)) / sd(df$completion_male))
df2$completion_female <- ((df$completion_female - mean(df$completion_female)) / sd(df$completion_female))
df2$income_per_person <- ((df$income_per_person - mean(df$income_per_person)) / sd(df$income_per_person))
df2$employment <- ((df$employment - mean(df$employment)) / sd(df$employment))
df2$life_expectancy <- ((df$life_expectancy - mean(df$life_expectancy)) / sd(df$life_expectancy))
head(df2)
df$completion_male <- ((df$completion_male - mean(df$completion_male)) / sd(df$completion_male))
df$completion_female <- ((df$completion_female - mean(df$completion_female)) / sd(df$completion_female))
df$income_per_person <- ((df$income_per_person - mean(df$income_per_person)) / sd(df$income_per_person))
df$employment <- ((df$employment - mean(df$employment)) / sd(df$employment))
df$life_expectancy <- ((df$life_expectancy - mean(df$life_expectancy)) / sd(df$life_expectancy))
head(df)
prcomp(df[,2:6],center = FALSE,scale = FALSE) #or any other combination of center\scaling
df$completion_male <- ((df$completion_male - mean(df$completion_male)) / sd(df$completion_male))
df$completion_female <- ((df$completion_female - mean(df$completion_female)) / sd(df$completion_female))
df$income_per_person <- ((df$income_per_person - mean(df$income_per_person)) / sd(df$income_per_person))
df$employment <- ((df$employment - mean(df$employment)) / sd(df$employment))
df$life_expectancy <- ((df$life_expectancy - mean(df$life_expectancy)) / sd(df$life_expectancy))
head(df)
prcomp(df[,2:6],center = FALSE,scale = FALSE) #or any other combination of center\scaling
View(df)
df <- read.csv ("cleaned.csv")
df <- read.csv ("cleaned.csv")
pca <- prcomp(df[,2:6],center = TRUE,scale = TRUE)
pca[1]
pca[2]
pca[3]
pca[4]
pca[5] # transformed data
head(pca[5])
head(pca[5])
pca[5]$x
pca$x
pca$x[1:5,]
df
df$completion_male <- ((df$completion_male - mean(df$completion_male)) / sd(df$completion_male))
df$completion_female <- ((df$completion_female - mean(df$completion_female)) / sd(df$completion_female))
df$income_per_person <- ((df$income_per_person - mean(df$income_per_person)) / sd(df$income_per_person))
df$employment <- ((df$employment - mean(df$employment)) / sd(df$employment))
df$life_expectancy <- ((df$life_expectancy - mean(df$life_expectancy)) / sd(df$life_expectancy))
head(df)
df[1,2:6]
pca$x[1:5,]
pca$[5][1:5,]
pca[5][1:5,]
pca$x[1:5,]
df[1,2:6]
pca[5] # transformed data
df[1,2:6]
components$rotation
pca1<-components$rotation[,1]
pca2<-components$rotation[,2]
pca1
components$rotation
foo<-components$rotation
foo<- as.data.frame(components$rotation)
View(foo)
pca[5] # transformed data
pca$x[1:5,]
foo2<- as.data.frame(pca$x[1:5,])
View(foo2)
setwd("C:/git/mytools/learning/PCA/")
df <- read.csv ("cleaned.csv")
df$completion_male <- ((df$completion_male - mean(df$completion_male)) / sd(df$completion_male))
df$completion_female <- ((df$completion_female - mean(df$completion_female)) / sd(df$completion_female))
df$income_per_person <- ((df$income_per_person - mean(df$income_per_person)) / sd(df$income_per_person))
df$employment <- ((df$employment - mean(df$employment)) / sd(df$employment))
df$life_expectancy <- ((df$life_expectancy - mean(df$life_expectancy)) / sd(df$life_expectancy))
head(df)
prcomp(df[,2:6],center = FALSE,scale = FALSE)
summary(pca)
prcomp(df[,2:6],center = TRUE,scale = TRUE)
summary(pca)
pca[1]
pca[2]
pca[3]
pca[4]
pca[1] #$sdev
pca[2] #$rotation
pca[3] #$center ?
pca[4] #$scale  ?
pca[5] # transformed data
as.data.frame(components$rotation)
as.data.frame(pca$x[1:5,])
as.data.frame(pca$x[1:5,])
components$rotation
as.data.frame(pca$x[1:5,])
pca$x
?prcomp
components <- pca[2]
components$rotation[,1]
components <- pca[2]
#Components are orthogonal to each other (dot product = 0)
components$rotation[,3] %*% components$rotation[,1]
#Components are normaled to have length 1.
sum(components$rotation[,1]**2)
components <- pca[2]
#Components are orthogonal to each other (dot product = 0)
components$rotation[,3] %*% components$rotation[,1]
#Components are normaled to have length 1.
sum(components$rotation[,1]**2)
pca1<-components$rotation[,1]
pca2<-components$rotation[,2]
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
arrows(0,0,pca1[5]* arrow_size,pca2[5]* arrow_size)
pca1
pca2
as.data.frame(pca1)
pca1
as.data.frame(components$rotation[,1:2])
as.data.frame(t(components$rotation[,1:2]))
foo<- as.data.frame(t(components$rotation[,1:2]))
View(foo)
pca1
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
arrows(0,0,pca1[5]* arrow_size,pca2[5]* arrow_size)
text(0,0, "aaa")
pca
pca
pca$
da
pca$sdev
pca$rotation
pca$rotation[1]
pca$rotation[0]
foo<-pca$rotation
row.names(foo)
row.names(pca)
row.names(pca$x)
pca1
pca1[1]
pca2[1]
row.names(pca1[1])
----------------caret
pca1[1]
row.names(pca1[1])
row.names(pca$rotation)
a<-row.names(pca1[1])
row.names(pca$rotation[1])
row.names(pca$rotation)[1]
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size) text(0,0, row.names(pca$rotation)[1])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
text(0,0, row.names(pca$rotation)[1])
text(pca1[1],pca2[1], row.names(pca$rotation)[1])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
text(pca1[1],pca2[1], row.names(pca$rotation)[1])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text(pca1[4],pca2[4], row.names(pca$rotation)[4])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text(pca1[4]* arrow_size,pca2[4]* arrow_size, row.names(pca$rotation)[4])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text(pca1[4]* arrow_size+5,pca2[4]* arrow_size+5, row.names(pca$rotation)[4])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text(pca1[4]* arrow_size+1,pca2[4]* arrow_size+1, row.names(pca$rotation)[4])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text((pca1[4]* arrow_size)+1,(pca2[4]* arrow_size)+1, row.names(pca$rotation)[4])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text((pca1[4]* arrow_size),(pca2[4]* arrow_size), row.names(pca$rotation)[4])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text(pca1[4]* arrow_size,pca2[4]* arrow_size, row.names(pca$rotation)[4])
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text(pca1[4]* arrow_size,pca2[4]* arrow_size, row.names(pca$rotation)[4])
arrows(0,0,pca1[5]* arrow_size,pca2[5]* arrow_size)
plot(pca$x[,1],  pca$x[,2])
arrow_size=2
arrows(0,0,pca1[1]* arrow_size,pca2[1]* arrow_size)
arrows(0,0,pca1[2]* arrow_size,pca2[2]* arrow_size)
arrows(0,0,pca1[3]* arrow_size,pca2[3]* arrow_size)
arrows(0,0,pca1[4]* arrow_size,pca2[4]* arrow_size)
text(pca1[4]* arrow_size,pca2[4]* arrow_size, row.names(pca$rotation)[4])
arrows(0,0,pca1[5]* arrow_size,pca2[5]* arrow_size)
xyNorm <- cbind((df$completion_male),
(df$completion_female),
(df$income_per_person),
(df$employment),
(df$life_expectancy)
)
xyNorm <- cbind((df$completion_male),
(df$completion_female),
(df$income_per_person),
(df$employment),
(df$life_expectancy)
)
xyCov <- cov(xyNorm)
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
eigenVectors
plot(df[,2:6])
xyNorm[x]
plot(xyNorm)
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
x
x <- 1:100
plot(xyNorm)
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
eigenVectors[2,1]
eigenVectors[1,1]
xyNorm[x]
eigenVectors[2,1]/eigenVectors[1,1]
eigenVectors[2,2]/eigenVectors[1,2]
xyNorm[x]
xyNorm
plot(df[,2],df[,3])
lines(xyNorm[x], pca[2]$rotation[2,1]/pca[2]$rotation[1,1] * xyNorm[x])
lines(xyNorm[x], pca[2]$rotation[2,2]/pca[2]$rotation[1,2] * xyNorm[x])
df
x <- 1:105
plot(df[,2],df[,3])
xyCov <- cov(df[,2:6])
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
df[,1]
df[,2]
fit<- (df[,2] <- df[,3])
fit
fit<- lm(df[,2] ~ df[,3])
plot (df[,2], df[,3])
df[,2]
df[,3]
df
df <- read.csv ("cleaned.csv")#
df$completion_male <- ((df$completion_male - mean(df$completion_male)) / sd(df$completion_male))#
df$completion_female <- ((df$completion_female - mean(df$completion_female)) / sd(df$completion_female))#
df$income_per_person <- ((df$income_per_person - mean(df$income_per_person)) / sd(df$income_per_person))#
df$employment <- ((df$employment - mean(df$employment)) / sd(df$employment))#
df$life_expectancy <- ((df$life_expectancy - mean(df$life_expectancy)) / sd(df$life_expectancy))#
head(df)#
plot(df[,2:6])
df[,2]
df[,3]
fit<- lm(df[,2] ~ df[,3])
plot (df[,2], df[,3])
plot (df[,2], df[,3])
fit<- lm(df[,3] ~ df[,2])
fit_x<- lm(df[,3] ~ df[,2]) #predict the third feaure using the second
lines(df[,2, predict(fit_x), col=”red”)
lines(df[,2, predict(fit_x), col="red")
lines(df[,2, predict(fit_x, col="red")
)
lines(df[,2, predict(fit_x), col="red")
plot (df[,2], df[,3])
fit_x<- lm(df[,3] ~ df[,2]) #predict the third feaure using the second
lines(df[,2], predict(fit_x), col="red")
xyCov <- cov(df[,2:3])
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
eigenValues
eigenVectors
df <- read.csv ("cleaned.csv")#
plot(df[,2:6])
plot (df[,2], df[,3])
fit_x<- lm(df[,3] ~ df[,2])
lines(df[,2], predict(fit_x), col="red")
df2 <- read.csv ("cleaned.csv")#
plot(df2[,2:6])
#predict the third feaure using the second
plot (df2[,2], df2[,3])
fit_x<- lm(df2[,3] ~ df2[,2])
lines(df2[,2], predict(fit_x), col="red")
df <- read.csv ("cleaned.csv")#
df$completion_male <- ((df$completion_male - mean(df$completion_male)) / sd(df$completion_male))#
df$completion_female <- ((df$completion_female - mean(df$completion_female)) / sd(df$completion_female))#
df$income_per_person <- ((df$income_per_person - mean(df$income_per_person)) / sd(df$income_per_person))#
df$employment <- ((df$employment - mean(df$employment)) / sd(df$employment))#
df$life_expectancy <- ((df$life_expectancy - mean(df$life_expectancy)) / sd(df$life_expectancy))#
head(df)#
xyCov <- cov(df[,2:3])
xyCov
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
eigenValues
eigenVectors
plot(xyNorm)
df[,2:3]
xyNorm <- cbind((df$completion_male),
(df$completion_female),
(df$income_per_person),
(df$employment),
(df$life_expectancy)
)
xyNorm
eigenValues <- eigen(xyCov)$values
eigenValues
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
eigenVectors
xyCov <- cov(df[,2:3])
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
plot(df[,2],df[,3])
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
eigenVectors[2,1]
plot(xyNorm)
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
xyNorm
xyCov <- cov(xyNorm)
xyCov
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
eigenValues
eigenVectors
xyCov
df[,2:3]
xyCov <- cov(df[,2:3])
xyCov
set.seed(2)
x <- 1:100
e <- rnorm(100, 0, 60)
y <- 20 + 3 * x + e
xyCov <- cov(xyNorm)
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors
xyCov
eigenValues <- eigen(xyCov)$values
eigenValues
set.seed(2)
x <- 1:100
e <- rnorm(100, 0, 60)
y <- 20 + 3 * x + e
xyNorm <- cbind(x=x-mean(x), y=y-mean(y))
plot(xyNorm)
xyCov <- cov(xyNorm)
xyCov
xyNorm
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors
eigenVectors
plot(xyNorm, ylim=c(-200,200), xlim=c(-200,200))
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
xyCov <- cov(df[,2:3])
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
plot(df[,2],df[,3])
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
eigenVectors[2,2]
xyNorm[x]
xyNorm <- cbind((df$completion_male),
(df$completion_female),
(df$income_per_person),
(df$employment),
(df$life_expectancy)
)
xyNorm[x]
plot(xyNorm)
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
plot(xyNorm)
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
xyNorm[x]
eigenVectors[2,1]/eigenVectors[1,1]
eigenVectors[2,2]/eigenVectors[1,2]
df2
df2 <- read.csv ("cleaned.csv")#
plot(df2[,2:6])
xyCov <- cov(df[,3:4])
xyCov
xyCov <- cov(df[,3:4])
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
plot(df[,3],df[,4])
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
xyNorm <- cbind(((df$completion_male - mean(df$completion_male)) ),
((df$completion_female - mean(df$completion_female)) ),
((df$income_per_person - mean(df$income_per_person)) ),
((df$employment - mean(df$employment)) ),
((df$life_expectancy - mean(df$life_expectancy)) )
)
xyNorm
xyNorm <- cbind(((df2$completion_male - mean(df2$completion_male)) ),
((df2$completion_female - mean(df2$completion_female)) ),
((df2$income_per_person - mean(df2$income_per_person)) ),
((df2$employment - mean(df2$employment)) ),
((df2$life_expectancy - mean(df2$life_expectancy)) )
)
xyNorm
plot(df2[,2:6])
#predict the third feaure using the second
plot (df2[,2], df2[,3])
fit_x<- lm(df2[,3] ~ df2[,2])
lines(df2[,2], predict(fit_x), col="red")
xyCov <- cov(df2[,3:4])
eigenValues <- eigen(xyCov)$values
eigenValues
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
eigenVectors
xyCov <- cov(df2[,2:3])
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
plot(df2[,2],df2[,3])
plot(xyNorm)
plot(df2[,2],df2[,3])
df2 <- read.csv ("cleaned.csv")#
df2
xyNorm <- cbind(((df2$completion_male - mean(df2$completion_male)) ),
((df2$completion_female - mean(df2$completion_female)) ),
((df2$income_per_person - mean(df2$income_per_person)) ),
((df2$employment - mean(df2$employment)) ),
((df2$life_expectancy - mean(df2$life_expectancy)) )
)
plot(df2[,2:6])
#predict the third feaure using the second
plot (df2[,2], df2[,3])
fit_x<- lm(df2[,3] ~ df2[,2])
lines(df2[,2], predict(fit_x), col="red")
xyCov <- cov(xyNorm)
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors
plot(xyNorm)
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
eigenVectors
xyNorm <- cbind(((df$completion_male - mean(df$completion_male)) / sd(df$completion_male)),
((df$completion_female - mean(df$completion_female)) / sd(df$completion_female)),
((df$income_per_person - mean(df$income_per_person)) / sd(df$income_per_person)),
((df$employment - mean(df$employment)) / sd(df$employment)),
((df$life_expectancy - mean(df$life_expectancy)) / sd(df$life_expectancy))
)
xyNorm
xyCov <- cov(xyNorm)
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
xyCov <- cov(xyNorm)
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors # contains the pca[2] object
plot(xyNorm)
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
set.seed(2)
x <- 1:100
e <- rnorm(100, 0, 60)
y <- 20 + 3 * x + e
plot(x,y)
yx.lm <- lm(y ~ x)
lines(x, predict(yx.lm), col="red")
xy.lm <- lm(x ~ y)
lines(predict(xy.lm), y, col="blue")
xyNorm <- cbind(x=x-mean(x), y=y-mean(y))
plot(xyNorm)
xyCov <- cov(xyNorm)
eigenValues <- eigen(xyCov)$values
eigenVectors <- eigen(xyCov)$vectors
plot(xyNorm, ylim=c(-200,200), xlim=c(-200,200))
lines(xyNorm[x], eigenVectors[2,1]/eigenVectors[1,1] * xyNorm[x])
lines(xyNorm[x], eigenVectors[2,2]/eigenVectors[1,2] * xyNorm[x])
